{
    "sourceFile": "Javascript/Arrays/checkEvenOrOdd.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1732105241744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732105279671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,8 @@\n     } else {\r\n         return \"Odd\";\r\n     }\r\n }\r\n+\r\n console.log(checkEvenOrOdd(4));  // Output: \"Even\"\r\n console.log(checkEvenOrOdd(7));  // Output: \"Odd\"\r\n console.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105328602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n+//<---  Function to see in a Array how many times the biggest value appears --->\r\n+\r\n function checkEvenOrOdd(number) {\r\n+\r\n     if (number % 2 === 0) {\r\n         return \"Even\";\r\n     } else {\r\n         return \"Odd\";\r\n"
                },
                {
                    "date": 1732105402090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,5 @@\n }\r\n \r\n console.log(checkEvenOrOdd(4));  // Output: \"Even\"\r\n console.log(checkEvenOrOdd(7));  // Output: \"Odd\"\r\n-console.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n+// console.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105435833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n //<---  Function to see in a Array how many times the biggest value appears --->\r\n \r\n-function checkEvenOrOdd(number) {\r\n+function checkEvenOrOdds(number) {\r\n \r\n     if (number % 2 === 0) {\r\n         return \"Even\";\r\n     } else {\r\n         return \"Odd\";\r\n     }\r\n }\r\n \r\n-console.log(checkEvenOrOdd(4));  // Output: \"Even\"\r\n-console.log(checkEvenOrOdd(7));  // Output: \"Odd\"\r\n+console.log(checkEvenOrOdds(4));  // Output: \"Even\"\r\n+console.log(checkEvenOrOdds(7));  // Output: \"Odd\"\r\n // console.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105444089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,10 @@\n //<---  Function to see in a Array how many times the biggest value appears --->\r\n \r\n-function checkEvenOrOdds(number) {\r\n-\r\n-    if (number % 2 === 0) {\r\n-        return \"Even\";\r\n+function verificarParOuImpar(numero) {\r\n+    // Check if the number is divisible by 2\r\n+    if (numero % 2 === 0) {\r\n+        return \"Par\"; // Return \"Par\" if the number is even\r\n     } else {\r\n-        return \"Odd\";\r\n+        return \"Ímpar\"; // Return \"Ímpar\" if the number is odd\r\n     }\r\n }\r\n-\r\n-console.log(checkEvenOrOdds(4));  // Output: \"Even\"\r\n-console.log(checkEvenOrOdds(7));  // Output: \"Odd\"\r\n-// console.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105453674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,4 +7,9 @@\n     } else {\r\n         return \"Ímpar\"; // Return \"Ímpar\" if the number is odd\r\n     }\r\n }\r\n+\r\n+// Example usage:\r\n+console.log(verificarParOuImpar(4));  // Output: \"Par\"\r\n+console.log(verificarParOuImpar(7));  // Output: \"Ímpar\"\r\n+console.log(verificarParOuImpar(0));  // Output: \"Par\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105470953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n //<---  Function to see in a Array how many times the biggest value appears --->\r\n \r\n-function verificarParOuImpar(numero) {\r\n+function checkEverOrOdd(numero) {\r\n     // Check if the number is divisible by 2\r\n     if (numero % 2 === 0) {\r\n         return \"Par\"; // Return \"Par\" if the number is even\r\n     } else {\r\n@@ -9,7 +9,7 @@\n     }\r\n }\r\n \r\n // Example usage:\r\n-console.log(verificarParOuImpar(4));  // Output: \"Par\"\r\n-console.log(verificarParOuImpar(7));  // Output: \"Ímpar\"\r\n-console.log(verificarParOuImpar(0));  // Output: \"Par\" (0 is considered even)\r\n+console.log(checkEverOrOdd(4));  // Output: \"Par\"\r\n+console.log(checkEverOrOdd(7));  // Output: \"Ímpar\"\r\n+console.log(checkEverOrOdd(0));  // Output: \"Par\" (0 is considered even)\r\n"
                },
                {
                    "date": 1732105495875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,60 @@\n //<---  Function to see in a Array how many times the biggest value appears --->\r\n \r\n-function checkEverOrOdd(numero) {\r\n-    // Check if the number is divisible by 2\r\n-    if (numero % 2 === 0) {\r\n-        return \"Par\"; // Return \"Par\" if the number is even\r\n-    } else {\r\n-        return \"Ímpar\"; // Return \"Ímpar\" if the number is odd\r\n+// <-----------Using a LOOP---------------->\r\n+\r\n+function contarVelasMaisAltas(velas) {\r\n+    let max = -Infinity;\r\n+    let count = 0;\r\n+\r\n+    for (let i = 0; i < velas.length; i++) {\r\n+        if (velas[i] > max) {\r\n+            max = velas[i];\r\n+            count = 1;\r\n+        } else if (velas[i] === max) {\r\n+            count++;\r\n+        }\r\n     }\r\n+    return { maxValue: max, count: count };\r\n }\r\n \r\n-// Example usage:\r\n-console.log(checkEverOrOdd(4));  // Output: \"Par\"\r\n-console.log(checkEverOrOdd(7));  // Output: \"Ímpar\"\r\n-console.log(checkEverOrOdd(0));  // Output: \"Par\" (0 is considered even)\r\n+console.log(contarVelasMaisAltas([1, 2, 8, 2, 5, 8]));\r\n+//Output: { maxValue: 8, count: 2 };\r\n+\r\n+const result = contarVelasMaisAltas([1, 2, 8, 2, 5, 8]);\r\n+console.log(`Highest value: ${result.maxValue}, Count: ${result.count}`);\r\n+// Output: Highest value: 8, Count: 2\r\n+\r\n+// <-----------Using a LOOP / for-of---------------->\r\n+\r\n+function contarAsVelasMaisAltas(velas) {\r\n+    let max = -Infinity;\r\n+    let count = 0;\r\n+\r\n+    for (let vela of velas) {\r\n+        if (vela > max) {\r\n+            max = vela;\r\n+            count = 1;\r\n+        } else if (vela === max) {\r\n+            count++;\r\n+        }\r\n+    }\r\n+    return { maxValue: max, count: count };\r\n+}\r\n+\r\n+console.log(contarAsVelasMaisAltas([1, 2, 8, 2, 5, 8]));\r\n+// Output: 2\r\n+\r\n+\r\n+// <-----------Using Javascript Methods---------------->\r\n+\r\n+function contarAVelasMaisAltas(velas) {\r\n+    const max = Math.max(...velas);\r\n+\r\n+    // Count how many times the maximum value appears using filter\r\n+    const count = velas.filter(vela => vela === max).length;\r\n+\r\n+    return count;\r\n+}\r\n+\r\n+console.log(contarAVelasMaisAltas([1, 2, 8, 2, 5, 8]));\r\n+// Output: 2\r\n"
                }
            ],
            "date": 1732105241744,
            "name": "Commit-0",
            "content": "function checkEvenOrOdd(number) {\r\n    if (number % 2 === 0) {\r\n        return \"Even\";\r\n    } else {\r\n        return \"Odd\";\r\n    }\r\n}\r\nconsole.log(checkEvenOrOdd(4));  // Output: \"Even\"\r\nconsole.log(checkEvenOrOdd(7));  // Output: \"Odd\"\r\nconsole.log(checkEvenOrOdd(0));  // Output: \"Even\" (0 is considered even)\r\n"
        }
    ]
}